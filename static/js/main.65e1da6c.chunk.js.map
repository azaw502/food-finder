{"version":3,"sources":["HomepageForm/Form.js","Layouts/Footer.js","Layouts/Header.js","App.js","serviceWorker.js","index.js"],"names":["Form","state","location","foodPreference","walkingTime","change","e","_this","setState","Object","defineProperty","target","name","value","onSubmit","props","_this2","this","classes","react_default","a","createElement","styles","index_es","className","paper","container","direction","justify","alignItems","spacing","root","item","xs","formControl","htmlFor","margin","onChange","onClick","color","size","variant","React","Component","withStyles","theme","display","flexWrap","unit","minWidth","selectEmpty","marginTop","padding","Footer","handleChange","event","Tabs_default","indicatorColor","textColor","centered","Tab_default","label","flexGrow","grow","menuButton","marginLeft","marginRight","position","aria-label","Menu_default","App","fields","console","log","react","Header","HomepageForm_Form","Layouts_Footer","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65e1da6c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  MuiThemeProvider,\r\n  Paper,\r\n  Grid\r\n} from \"@material-ui/core\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 200\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  },\r\n  paper: {\r\n    padding: 50\r\n  }\r\n});\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    location: \"\",\r\n    foodPreference: \"\",\r\n    walkingTime: \"\"\r\n  };\r\n\r\n  change = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    this.props.onSubmit(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <Paper className={classes.paper}>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={24}\r\n          >\r\n            <form className={classes.root}>\r\n              <Grid item xs={12}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"location\">Location</InputLabel>\r\n                  <Select\r\n                    name=\"location\"\r\n                    margin=\"normal\"\r\n                    value={this.state.location}\r\n                    onChange={e => this.change(e)}\r\n                  >\r\n                    <MenuItem value=\"No Preference\">No Preference</MenuItem>\r\n                    <MenuItem value=\"Location 1\">Location 1</MenuItem>\r\n                    <MenuItem value=\"Location 2\">Location 2</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"foodPreference\">\r\n                    Food Preference\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"foodPreference\"\r\n                    margin=\"normal\"\r\n                    value={this.state.foodPreference}\r\n                    onChange={e => this.change(e)}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"No Preference\">No Preference</MenuItem>\r\n                    <MenuItem value=\"American\">American</MenuItem>\r\n                    <MenuItem value=\"Bakery\">Bakery</MenuItem>\r\n                    <MenuItem value=\"Chinese\">Chinese</MenuItem>\r\n                    <MenuItem value=\"Thai\">Thai</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"walkingTime\">Walking Time</InputLabel>\r\n                  <Select\r\n                    name=\"walkingTime\"\r\n                    margin=\"normal\"\r\n                    value={this.state.walkingTime}\r\n                    onChange={e => this.change(e)}\r\n                  >\r\n                    <MenuItem value=\"No Preference\">No Preference</MenuItem>\r\n                    <MenuItem value=\"<5\">Under 5 Minutes</MenuItem>\r\n                    <MenuItem value=\"5-10\">5-10 Minutes</MenuItem>\r\n                    <MenuItem value=\"10-15\">10-15 Minutes</MenuItem>\r\n                    <MenuItem value=\"15-20\">15-20 Minutes</MenuItem>\r\n                    <MenuItem value=\">20\">Over 20 Minutes</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  onClick={() => this.onSubmit()}\r\n                  color=\"primary\"\r\n                  margin=\"large\"\r\n                  size=\"large\"\r\n                  variant=\"raised\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </form>\r\n          </Grid>\r\n        </Paper>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Form);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n};\r\n\r\nclass Footer extends React.Component {\r\n  state = {\r\n    value: 0\r\n  };\r\n\r\n  handleChange = (event, value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Tabs\r\n        value={this.state.value}\r\n        onChange={this.handleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"Placeholder 1\" />\r\n        <Tab label=\"Placeholder 2\" />\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nFooter.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Footer);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nfunction ButtonAppBar(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h4\" color=\"inherit\" className={classes.grow}>\r\n            Rouxlette\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nButtonAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(ButtonAppBar);\r\n","import React, { Fragment, Component } from \"react\";\nimport \"./App.css\";\nimport { Form } from \"./HomepageForm/index\";\nimport { Header, Footer } from \"./Layouts\";\n\nclass App extends Component {\n  onSubmit = fields => {\n    console.log(\"Location is: \", fields.location);\n    console.log(\"Food Preference is: \", fields.foodPreference);\n    console.log(\"Walking time is: \", fields.walkingTime);\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <div className=\"App\">\n          <Form onSubmit={fields => this.onSubmit(fields)} />\n        </div>\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}